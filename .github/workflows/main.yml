name: Deploy infra using Terraform
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  terraform_workflow:
    name: Terraform Workflow
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      TF_VAR_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_access_key_secret: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
      TF_IN_AUTOMATION: true
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Clone repo
        uses: actions/checkout@master
        
      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@main
        with:
          tfsec_args: --soft-fail
          github_token: ${{ secrets.TOKEN_GITHUB }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-south-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Initialize Terraform
        id: init
        run: |
          terraform init \
          -backend-config="access_key="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -backend-config="secret_key="${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Plan Terraform
        id: plan
        continue-on-error: true
        run: |
          terraform plan
      # - name: Apply Terraform
      #   if: steps.plan.outcome == 'success'
      #   id: apply
      #   continue-on-error: true
      #   run: |
      #     terraform -chdir="terraform/hbits-prod-infra/v1/hbits-core-infra-module/" apply -lock=false -auto-approve